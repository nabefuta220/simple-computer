
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FUCI FUNC HALT LDI LOAD MOV OUT RESISTER STA VALUEcmd : MOV RESISTER RESISTERcmd : FUNC VALUE RESISTERcmd : LDI RESISTER VALUEcmd : FUCI VALUE VALUEcmd : LOAD RESISTER VALUEcmd : STA RESISTER VALUEcmd : FUNC VALUE VALUEcmd : HALTcmd : OUT RESISTER VALUE'
    
_lr_action_items = {'MOV':([0,],[2,]),'FUNC':([0,],[3,]),'LDI':([0,],[4,]),'FUCI':([0,],[5,]),'LOAD':([0,],[6,]),'STA':([0,],[7,]),'HALT':([0,],[8,]),'OUT':([0,],[9,]),'$end':([1,8,17,18,19,20,21,22,23,24,],[0,-8,-1,-7,-2,-3,-4,-5,-6,-9,]),'RESISTER':([2,4,6,7,9,10,11,],[10,12,14,15,16,17,19,]),'VALUE':([3,5,11,12,13,14,15,16,],[11,13,18,20,21,22,23,24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cmd':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cmd","S'",1,None,None,None),
  ('cmd -> MOV RESISTER RESISTER','cmd',3,'p_mov','asmyacc.py',64),
  ('cmd -> FUNC VALUE RESISTER','cmd',3,'p_func_r','asmyacc.py',70),
  ('cmd -> LDI RESISTER VALUE','cmd',3,'p_ldi','asmyacc.py',78),
  ('cmd -> FUCI VALUE VALUE','cmd',3,'p_fuci','asmyacc.py',85),
  ('cmd -> LOAD RESISTER VALUE','cmd',3,'p_load','asmyacc.py',91),
  ('cmd -> STA RESISTER VALUE','cmd',3,'p_sta','asmyacc.py',97),
  ('cmd -> FUNC VALUE VALUE','cmd',3,'p_func','asmyacc.py',103),
  ('cmd -> HALT','cmd',1,'p_halt','asmyacc.py',109),
  ('cmd -> OUT RESISTER VALUE','cmd',3,'p_out','asmyacc.py',114),
]
